# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Add permission
        run: chmod +x gradlew

          ## create application-database.yaml
      - name: make application.yaml
        run: |
          cd ./src/main/resources
                 
          touch ./application.yml
          
          echo "spring.datasource.mapper-locations=$MAPPER_LOCATIONS" >> ./application.yml
          echo "spring.datasource.jdbc-url=$JDBC_URL" >> ./application.yml
          echo "spring.datasource.username=$USERNAME" >> ./application.yml
          echo "spring.datasource.password=$PASSWORD" >> ./application.yml
          shell: bash
        env:
          MAPPER_LOCATIONS: ${{ secrets.MAPPER_LOCATIONS }}
          JDBC_URL: ${{ secrets.JDBC_URL }}
          USERNAME: ${{ secrets.USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}


      - name: Test with Gradle
        run: ./gradlew --info test
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: build